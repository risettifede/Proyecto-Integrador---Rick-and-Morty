{"ast":null,"code":"import { ADD_FAV, REMOVE_FAV } from './actions';\nconst initialState = {\n  myFavorites: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_FAV:\n      return {\n        ...state,\n        myFavorites: [...state.myFavorites, action.payload.character]\n      };\n    case REMOVE_FAV:\n      return {\n        ...state,\n        myFavorites: state.myFavorites.filter(item => item.id !== action.payload.id)\n      };\n    default:\n      return state;\n  }\n};\nexport default rootReducer;\n\n// Dirígete a tu archivo reducer.js. Allí deberás:\n\n// Crear un initialState con una propiedad llamada \"myFavorites\". Esta propiedad será un arreglo vacío.\n\n// Luego deberás crear tu reducer. Recuerda que este recibe dos parámetros y que dentro de él hay un switch.\n\n// [NOTA]: ten en cuenta el modo en el que lo exportas, y cómo lo importas dentro de tu store.\n\n// Crea un primer caso llamado \"ADD_FAV\" en el que puedas agregar a un personaje que recibes por payload a tu estado \"myFavorites\".\n\n// Crea otro caso llamado \"REMOVE_FAV\" en el que puedas eliminar a un personaje de tu estado \"myFavorites\" a partir de un id que recibas por\n// payload.\n\n// [NOTA]: ten en cuenta que el id que recibes por payload es un string, y el id de los personajes es un número.\n\n// No te olvides de tu caso default.","map":{"version":3,"names":["ADD_FAV","REMOVE_FAV","initialState","myFavorites","rootReducer","state","arguments","length","undefined","action","type","payload","character","filter","item","id"],"sources":["D:/FEDERICO/Escritorio/rick_and_morty/Client/src/redux/reducer.js"],"sourcesContent":["import { ADD_FAV, REMOVE_FAV } from './actions'\r\n\r\nconst initialState = {\r\n    myFavorites: [],\r\n}\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case ADD_FAV:\r\n        return {\r\n          ...state,\r\n          myFavorites: [...state.myFavorites, action.payload.character],\r\n        };\r\n  \r\n      case REMOVE_FAV:\r\n        return {\r\n          ...state,\r\n          myFavorites: state.myFavorites.filter((item) => item.id !== action.payload.id),\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n\r\n\r\nexport default rootReducer;\r\n\r\n\r\n// Dirígete a tu archivo reducer.js. Allí deberás:\r\n\r\n// Crear un initialState con una propiedad llamada \"myFavorites\". Esta propiedad será un arreglo vacío.\r\n\r\n// Luego deberás crear tu reducer. Recuerda que este recibe dos parámetros y que dentro de él hay un switch.\r\n\r\n// [NOTA]: ten en cuenta el modo en el que lo exportas, y cómo lo importas dentro de tu store.\r\n\r\n// Crea un primer caso llamado \"ADD_FAV\" en el que puedas agregar a un personaje que recibes por payload a tu estado \"myFavorites\".\r\n\r\n// Crea otro caso llamado \"REMOVE_FAV\" en el que puedas eliminar a un personaje de tu estado \"myFavorites\" a partir de un id que recibas por\r\n// payload.\r\n\r\n// [NOTA]: ten en cuenta que el id que recibes por payload es un string, y el id de los personajes es un número.\r\n\r\n// No te olvides de tu caso default."],"mappings":"AAAA,SAASA,OAAO,EAAEC,UAAU,QAAQ,WAAW;AAE/C,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE;AACjB,CAAC;AAED,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC7C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKV,OAAO;MACV,OAAO;QACL,GAAGK,KAAK;QACRF,WAAW,EAAE,CAAC,GAAGE,KAAK,CAACF,WAAW,EAAEM,MAAM,CAACE,OAAO,CAACC,SAAS;MAC9D,CAAC;IAEH,KAAKX,UAAU;MACb,OAAO;QACL,GAAGI,KAAK;QACRF,WAAW,EAAEE,KAAK,CAACF,WAAW,CAACU,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,CAACI,EAAE;MAC/E,CAAC;IAEH;MACE,OAAOV,KAAK;EAAC;AAEnB,CAAC;AAIH,eAAeD,WAAW;;AAG1B;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}