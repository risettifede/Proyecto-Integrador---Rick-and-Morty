{"ast":null,"code":"var _jsxFileName = \"D:\\\\FEDERICO\\\\Escritorio\\\\rick_and_morty\\\\Client\\\\src\\\\components\\\\Login\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styles from './Login.module.css';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport validateUser from '../../commons/functions/validateUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  const [errors, setErrors] = useState({});\n  const [access, setAccess] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [gmail, setGmail] = useState(\"\");\n  const [userData, setUserData] = useState({\n    gmail: \"\",\n    password: \"\"\n  });\n\n  // const navigate = useNavigate();\n\n  const handleChange = event => {\n    setUserData({\n      ...userData,\n      [event.target.name]: event.target.value\n    });\n    setErrors(validateUser({\n      ...userData,\n      [event.target.name]: event.target.value\n    }));\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const gmail = userData.gmail;\n    const password = userData.password;\n    if (gmail === \"invitado@gmail.com\" && password === \"maradona1\") {\n      setAccess(true);\n      navigate(\"/home\");\n    } else {\n      alert(\"Usuario o contrase침a incorrecta\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.login,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.img_container,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"rickymorty.png\",\n        alt: \"Rick\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ingresatusdatos\",\n        className: styles.label,\n        children: \"\\uD83D\\uDC47\\uD83C\\uDFFC INGRESA TUS DATOS \\uD83D\\uDC47\\uD83C\\uDFFC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"text\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"gmail\",\n          className: styles.input,\n          placeholder: \"E-mail\",\n          name: \"gmail\",\n          value: userData.gmail,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), errors.gmail && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.gmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"text\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: styles.input,\n          placeholder: \"Password\",\n          name: \"password\",\n          value: userData.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        onClick: handleSubmit,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"JagxieD2uQ85dRJ4Du/+UpHGUFY=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\n\n/* EJEMPLO HECHO EN CLASE */\n\n// const Form = () => {\n\n//     /* const [username, setUsername] = useState (\"\"); --> En lugar de tener un estado para c/ input, lo agregamos al estado\n//     const [password, setPassword] = useState (\"\"); */ // --> En lugar de tener un estado para c/ input, lo agregamos al estado\n\n//     const validate = (form, setErrors, errors) => {\n//       if (!form.username) setErrors({ ...errors, username: \"Usuario vacio\" });\n//       else ({ ...errors, username: \"\" });\n\n//       /* EXPRESI칍N REGULAR: formatoDeUnMail@gmail.com */\n//       if(/^\\w+([.-_+]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{3})+$/.test(form.email))  /* Si esto es correcto */ setErrors({ ...errors, username: \"\" })\n//       else /* Si no */ setErrors({ ...errors, username: \"Usuario inv치lido\" })\n//     }\n\n//     const [form, setForm] = useState({\n//       username: \"\",\n//       password: \"\",\n//     })\n\n//     const [errors, setErrors] = useState({\n//       username: \"\",\n//       password: \"\",\n//     })\n\n//     const handleChange = (event) => {\n//       const property = event.target.name;\n//       const value = event.target.value;\n\n//       /* UNA DE LAS FORMAS DE CAMBIAR Y VALIDAR EL ESTADO EN TIEMPO REAL Y AL MISMO TIEMPO */\n//       setForm({ ...form, [property]: value }) // AC츼 CAMBIA LA INFO - con el brackets notation, tomo el valor de property. \n\n//       validate({ ...form, [property]: value }, setErrors, errors) // AC츼 VALIDA LA INFO\n//     }\n\n//     const sumbitHandler = (event) => {\n//       event.preventDefault(); // Este m칠todo es para que no reinicie toda la p치gina y borre lo ya\n//       alert(\"LOGIN EXITOSO\")\n//     }\n\n//     return (\n//       <form onSubmit={sumbitHandler}>\n//         <div>\n//           <label htmlFor=\"username\">Ingresar usuario:</label>\n//           <input\n//             type=\"text\"\n//             name=\"username\"\n//             value={form.username} onChange={handleChange}\n//           />\n//         </div>\n//         <div>\n//           <label htmlFor=\"password\">Ingresar contrase침a:</label>\n//           <input\n//             type=\"text\"\n//             name=\"password\"\n//             value={form.password}\n//             onChange={handleChange}\n//           />\n//         </div>\n//         <button type=\"sumbit\">Login</button>\n//       </form>\n//     )\n//   }\n\n//   export default Form;  \nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","styles","useState","useNavigate","validateUser","jsxDEV","_jsxDEV","Login","_s","navigate","errors","setErrors","access","setAccess","password","setPassword","gmail","setGmail","userData","setUserData","handleChange","event","target","name","value","handleSubmit","preventDefault","alert","className","login","onSubmit","children","img_container","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","label","type","input","placeholder","onChange","button","onClick","_c","$RefreshReg$"],"sources":["D:/FEDERICO/Escritorio/rick_and_morty/Client/src/components/Login/Login.jsx"],"sourcesContent":["import React from 'react'\r\nimport styles from './Login.module.css'\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport validateUser from '../../commons/functions/validateUser';\r\n\r\nfunction Login() {\r\n  \r\n  const navigate = useNavigate();\r\n  const [errors, setErrors] = useState({});\r\n  const [access, setAccess] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [gmail, setGmail] = useState(\"\");\r\n  const [userData, setUserData] = useState({\r\n    gmail: \"\",\r\n    password: \"\",\r\n  });\r\n  \r\n  // const navigate = useNavigate();\r\n\r\n  const handleChange = (event) => {\r\n    setUserData({\r\n      ...userData,\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    setErrors(validateUser({\r\n      ...userData,\r\n      [event.target.name]: event.target.value\r\n    }))\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const gmail = userData.gmail;\r\n    const password = userData.password;\r\n    if (gmail === \"invitado@gmail.com\" && password === \"maradona1\") { setAccess(true); navigate(\"/home\") }\r\n    else { alert (\"Usuario o contrase침a incorrecta\") } \r\n  }\r\n\r\n  return (\r\n    <form className={styles.login} onSubmit={handleSubmit}>\r\n      \r\n      <div className={styles.img_container}>\r\n        <img src=\"rickymorty.png\" alt=\"Rick\" />\r\n      </div>\r\n      <div>\r\n        <label \r\n        htmlFor=\"ingresatusdatos\" \r\n        className={styles.label}> \r\n        游녢游낖 INGRESA TUS DATOS 游녢游낖\r\n        </label>\r\n\r\n        <label htmlFor='text'>\r\n          <input \r\n          type=\"gmail\" \r\n          className={styles.input} \r\n          placeholder='E-mail'\r\n          name=\"gmail\"\r\n          value={userData.gmail}\r\n          onChange={handleChange}\r\n          />\r\n          {errors.gmail && <p>{errors.gmail}</p>}\r\n        </label>\r\n\r\n        <label htmlFor='text'>\r\n          <input \r\n          type=\"password\"\r\n          className={styles.input} \r\n          placeholder='Password'\r\n          name=\"password\"\r\n          value={userData.password}\r\n          onChange={handleChange}\r\n          />\r\n          {errors.password && <p>{errors.password}</p>} \r\n        </label>\r\n\r\n        <button \r\n        className={styles.button}\r\n        onClick={handleSubmit}> \r\n        Login\r\n        </button>\r\n      </div>\r\n\r\n    </form>\r\n    \r\n  )\r\n}\r\n\r\nexport default Login;\r\n\r\n/* EJEMPLO HECHO EN CLASE */\r\n\r\n// const Form = () => {\r\n\r\n//     /* const [username, setUsername] = useState (\"\"); --> En lugar de tener un estado para c/ input, lo agregamos al estado\r\n//     const [password, setPassword] = useState (\"\"); */ // --> En lugar de tener un estado para c/ input, lo agregamos al estado\r\n  \r\n//     const validate = (form, setErrors, errors) => {\r\n//       if (!form.username) setErrors({ ...errors, username: \"Usuario vacio\" });\r\n//       else ({ ...errors, username: \"\" });\r\n  \r\n//       /* EXPRESI칍N REGULAR: formatoDeUnMail@gmail.com */\r\n//       if(/^\\w+([.-_+]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{3})+$/.test(form.email))  /* Si esto es correcto */ setErrors({ ...errors, username: \"\" })\r\n//       else /* Si no */ setErrors({ ...errors, username: \"Usuario inv치lido\" })\r\n//     }\r\n  \r\n//     const [form, setForm] = useState({\r\n//       username: \"\",\r\n//       password: \"\",\r\n//     })\r\n  \r\n//     const [errors, setErrors] = useState({\r\n//       username: \"\",\r\n//       password: \"\",\r\n//     })\r\n  \r\n//     const handleChange = (event) => {\r\n//       const property = event.target.name;\r\n//       const value = event.target.value;\r\n  \r\n//       /* UNA DE LAS FORMAS DE CAMBIAR Y VALIDAR EL ESTADO EN TIEMPO REAL Y AL MISMO TIEMPO */\r\n//       setForm({ ...form, [property]: value }) // AC츼 CAMBIA LA INFO - con el brackets notation, tomo el valor de property. \r\n  \r\n//       validate({ ...form, [property]: value }, setErrors, errors) // AC츼 VALIDA LA INFO\r\n//     }\r\n  \r\n//     const sumbitHandler = (event) => {\r\n//       event.preventDefault(); // Este m칠todo es para que no reinicie toda la p치gina y borre lo ya\r\n//       alert(\"LOGIN EXITOSO\")\r\n//     }\r\n  \r\n//     return (\r\n//       <form onSubmit={sumbitHandler}>\r\n//         <div>\r\n//           <label htmlFor=\"username\">Ingresar usuario:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"username\"\r\n//             value={form.username} onChange={handleChange}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label htmlFor=\"password\">Ingresar contrase침a:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"password\"\r\n//             value={form.password}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </div>\r\n//         <button type=\"sumbit\">Login</button>\r\n//       </form>\r\n//     )\r\n//   }\r\n  \r\n//   export default Form;  \r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}